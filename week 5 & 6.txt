# week-5

-----------------------------


What will be the output of the following code - and more importantly - WHY?


for (var i = 0; i < 3; i++)
 {
      setTimeout(function() { alert(i); }, 1000 + i);
}


------------------------------ 

The solution :


This code will show us 3 alert contain number 3 ((alert (i)  )) 
The time difference between them is 1002 ms
Because i is equal to 3.? And 1000 + i= 1002 ms   
And that's how long the alert  must implement
 

----------------------------------

 function addSix(n)
 {return function (y){n+y};};


 var addSix = createBase(6);
 

 addSix(10);
 

 addSix(21);

---------------------------------

<button id="btn-0">Button 1!</button>


<button id="btn-1">Button 2!</button>


<button id="btn-2">Button 3!</button>


<script type="text/javascript">

    
var prizes = ['A Unicorn!', 'A Hug!', 'Fresh Laundry!'];
    
    
function fun (btnNum){return function (){alert(prizes[btnNum]);};};
    
   
for (var btnNum = 0; btnNum < prizes.length; btnNum++) {

        
       
document.getElementById('btn-' + btnNum).onclick =fun(btnNum);
 };

</script>


-----------------------------



Rewrite to Async:
1.
calculateSum(2, 6,function(sum){console.log(sum)});

2.
$.getJSON('http://myapi.com',function(results){
showResults(results);});

3.
calculateSum(2, 6,function(sum){if (sum > 8) {
    console.log('larger than 8');
}});

4.
$.getJSON('http://myapi.com',function(data){data.map(function (x) { return x * 8; })});




TODO !!!


$.getJSON("https://reqres.in/api/users?delay=3",function(data){
console.log(data);});

$.getJSON("https://reqres.in/api/users/2", function(data){

console.log(data);});

console.log("hello")    
                            -----------------------------------------------------------------------------------------


# week 6


function renderListOfRepositories (obj){
	return new Promise(function (resolve, reject) {
	 var myListElement = document.getElementById('repos');
     var repoIdArr=[];
	 var urlArr=[];
		for(var k in obj){

      var repo =  obj[k];
      var repoId = 'repo-'+k;
      myListElement.innerHTML += [
        '<li id="', repoId ,'">',
        '<a href="',
        repo.url,
        '" >',
        repo.name,
        '</a></li>'
      ].join('');
		 repoIdArr.push(repoId);
		 urlArr.push(repo.contributors_url);
		 
	 };
		resolve([urlArr, repoIdArr]);
	})};

function fetchContributors ( [url, repoId] ){
			
		return new Promise(function (resolve, reject) {
		var myContributorsList=[];
			for (var n in url){	
    var getContributorsRequest = new XMLHttpRequest();
    
    
getContributorsRequest.onload = function(){
	 myContributorsList[n] = JSON.parse(getContributorsRequest.responseText);
		} ;
    getContributorsRequest.open('GET',url[n],false);
    getContributorsRequest.send();
    };
			resolve([myContributorsList,repoId]);})
  };

function renderContributors ([myContributorsList,repoId]){
	for (var m in repoId){
	var repoListItem = document.getElementById(repoId[m])
      var listOfContributors = '';
		
      for(var k in myContributorsList[m]){
        var contributor = myContributorsList[m][k];

        listOfContributors += [
          '<li>',
          '<img src="',
          contributor.avatar_url,
          '" />',
          '</li>'
        ].join('');
}

      repoListItem.innerHTML += '<h2>Contributors</h2><ul class="contributor-list">' + listOfContributors + '</ul>';
    };}

fetchReposFromOrganization('https://api.github.com/orgs/hackyourfuture/repos').then(renderListOfRepositories).then(fetchContributors).then(renderContributors);
